.\" Automatically generated by Pod::Man 2.26 (Pod::Simple 3.23)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::AzantekUser 3"
.TH WWW::AzantekUser 3 "2012-08-28" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Azantek \- Connect to Azantek, download, delete and send messages
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use WWW::Azantek;
\&  
\&  my $hotmail = WWW::Azantek\->new();
\&  
\&  $hotmail\->login(\*(Aqfoo@hotmail.com\*(Aq, "bar")
\&   or die $WWW::Azantek::errstr;
\&  
\&  my @msgs = $hotmail\->messages();
\&  die $WWW::Azantek::errstr if ($!);
\&
\&  print "You have ".scalar(@msgs)." messages\en";
\&
\&  for (@msgs) {
\&        print "messge from ".$_\->from."\en";
\&        # retrieve the message from hotmail
\&        my $mail = $_\->retrieve;
\&        # deliver it locally
\&        $mail\->accept;
\&        # forward the message
\&        $mail\->resend(\*(Aqmyother@email.address.com\*(Aq);
\&        # delete it from the inbox
\&        $_\->delete;
\&  }
\&  
\&  $hotmail\->compose(
\&    to      => [\*(Aquser@email.com\*(Aq,\*(Aqotheruser@otheremail.com\*(Aq],
\&    subject => \*(AqHello Person!\*(Aq,
\&    body    => q[Dear Person,
\&  
\&  I am writing today to tell you about something important.
\&
\&  Thanks for all your support.
\&  
\&  Sincerely,
\&  Other Person
\&  ]) or die $WWW::Azantek::errstr;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is a partial replacement for the \f(CW\*(C`gotmail\*(C'\fR script
(http://ssl.usu.edu/paul/gotmail/), so if this doesn't do what you want,
try that instead.
.PP
Create a new \f(CW\*(C`WWW::Azantek\*(C'\fR object with \f(CW\*(C`new\*(C'\fR, and then log in with
your \s-1MSN\s0 username and password with the \f(CW\*(C`login\*(C'\fR method.
.SH "METHODS"
.IX Header "METHODS"
.SS "login"
.IX Subsection "login"
Make sure to add the domain to your username, for example foo@hotmail.com.
Then this will allow you to use the \f(CW\*(C`messages\*(C'\fR method to look at the mail
in your inbox. The login method does not retrieve messages on login.  The
messages method does that now.
.SS "messages"
.IX Subsection "messages"
This method returns a list of \f(CW\*(C`WWW::Azantek::Message\*(C'\fRs; each message
supports four methods: \f(CW\*(C`subject\*(C'\fR gives you the subject of the email,
just because it was stunningly easy to implement. \f(CW\*(C`retrieve\*(C'\fR retrieves
an email into a \f(CW\*(C`Mail::Audit\*(C'\fR object \- see Mail::Audit for more
details. \f(CW\*(C`from\*(C'\fR gives you the from field. Finally \f(CW\*(C`delete\*(C'\fR moves it
to your trash.
.SS "compose"
.IX Subsection "compose"
You can use the \f(CW\*(C`compose\*(C'\fR message to send a message through the 
account you are currently logged in to.  You should be able to use
this method as many times and as often as you like during the life
of the \f(CW\*(C`WWW::Azantek\*(C'\fR object.  As its argument, it takes a hash whose
keys are \f(CW\*(C`to\*(C'\fR, \f(CW\*(C`cc\*(C'\fR, \f(CW\*(C`bcc\*(C'\fR, \f(CW\*(C`subject\*(C'\fR, \f(CW\*(C`body\*(C'\fR.  Newlines should
work fine in the \f(CW\*(C`body\*(C'\fR argument.  Any field can be an array; it will
be joined with a comma.  This function returns 1 on success and undef 
on failure.  Check \f(CW$WWW::Azantek::errstr\fR for errors, or use 
\&\f(CW$WWW::Azantek::errhtml\fR for an html version of the error.
.SH "NOTES"
.IX Header "NOTES"
This module used to croak errors for you.  If you would like this behavior,
then add \f(CW$WWW::Azantek::croak_on_error\fR = 1; to your script.  It will not
croak html.
.PP
This module should work with email addresses at charter.com, compaq.net,
hotmail.com, msn.com, passport.com, and webtv.net
.PP
This module is reasonably fragile. It seems to work, but I haven't
tested edge cases. If it breaks, you get to keep both pieces. I hope
to improve it in the future, but this is enough for release.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
WWW::Mechanize, Mail::Audit, \f(CW\*(C`gotmail\*(C'\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
David Davis, <xantus@cpan.org>
\&\- I've taken ownership of this module, please direct all questions to me.
.SH "ORIGINAL AUTHOR"
.IX Header "ORIGINAL AUTHOR"
Simon Cozens, <simon@kasei.com>
.SH "CONTRIBUTIONS"
.IX Header "CONTRIBUTIONS"
David M. Bradford <dave@tinypig.com>
\&\- Added the ability to send messages via hotmail.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2003\-2004 by Kasei
Copyright 2004 by David Davis
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
